/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { FormControl, Select, InputLabel } from '@mui/material';
import { styled } from '@mui/material/styles';
import Icon1 from 'src/components/Icon1/Icon1';

const Select2 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const AdornmentStart = styled(Icon1)(({ theme }) => ({
  height: `20px`,
  width: `20px`,
  margin: `3px 0px 0px 0px`,
}));

const HelperText = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectStandard = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const HelperText1 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectStandard1 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const AdornmentStart1 = styled(Icon1)(({ theme }) => ({
  height: `20px`,
  width: `20px`,
  margin: `3px 0px 0px 0px`,
}));

const SelectStandard2 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const HelperText2 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectStandard3 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const AdornmentStart2 = styled(Icon1)(({ theme }) => ({
  height: `20px`,
  width: `20px`,
  margin: `3px 0px 0px 0px`,
}));

const HelperText3 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectFilled = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const HelperText4 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectFilled1 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const AdornmentStart3 = styled(Icon1)(({ theme }) => ({
  height: `20px`,
  width: `20px`,
  margin: `3px 0px 0px 0px`,
}));

const HelperText5 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectFilled2 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const HelperText6 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectFilled3 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const AdornmentStart4 = styled(Icon1)(({ theme }) => ({
  height: `20px`,
  width: `20px`,
  margin: `3px 0px 0px 0px`,
}));

const HelperText7 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectOutlined = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const HelperText8 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectOutlined1 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const AdornmentStart5 = styled(Icon1)(({ theme }) => ({
  height: `20px`,
  width: `20px`,
  margin: `3px 0px 0px 0px`,
}));

const HelperText9 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectOutlined2 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

const HelperText10 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
}));

const SelectOutlined3 = styled(FormControl)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Helper'].fontStyle,
  fontFamily: theme.typography['Components']['Helper'].fontFamily,
  fontWeight: theme.typography['Components']['Helper'].fontWeight,
  fontSize: theme.typography['Components']['Helper'].fontSize,
  letterSpacing: theme.typography['Components']['Helper'].letterSpacing,
  lineHeight: theme.typography['Components']['Helper'].lineHeight,
  textDecoration: theme.typography['Components']['Helper'].textDecoration,
  textTransform: theme.typography['Components']['Helper'].textTransform,
}));

function Select1(props) {
  return (
    <Select2 className={props.className}>
      <SelectStandard
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="standard"
        size={'medium'}
        disabled={true}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select
          label={'Label'}
          startAdornment={
            <InputAdornment position="start">
              <AdornmentStart />
            </InputAdornment>
          }
        ></Select>
        <FormHelperText>
          <HelperText>{`Helper text`}</HelperText>
        </FormHelperText>
      </SelectStandard>
      <SelectStandard1
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="standard"
        size={'medium'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select label={'Label'}></Select>
        <FormHelperText>
          <HelperText1>{`Helper text`}</HelperText1>
        </FormHelperText>
      </SelectStandard1>
      <SelectStandard2
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="standard"
        size={'small'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select
          label={'Label'}
          startAdornment={
            <InputAdornment position="start">
              <AdornmentStart1 />
            </InputAdornment>
          }
        ></Select>
        <FormHelperText>{'new'}</FormHelperText>
      </SelectStandard2>
      <SelectStandard3
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="standard"
        size={'small'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select label={'Label'}></Select>
        <FormHelperText>
          <HelperText2>{`Helper text`}</HelperText2>
        </FormHelperText>
      </SelectStandard3>
      <SelectFilled
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="filled"
        size={'medium'}
        disabled={true}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select
          label={'Label'}
          startAdornment={
            <InputAdornment position="start">
              <AdornmentStart2 />
            </InputAdornment>
          }
        ></Select>
        <FormHelperText>
          <HelperText3>{`Helper text`}</HelperText3>
        </FormHelperText>
      </SelectFilled>
      <SelectFilled1
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="filled"
        size={'medium'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select label={'Label'}></Select>
        <FormHelperText>
          <HelperText4>{`Helper text`}</HelperText4>
        </FormHelperText>
      </SelectFilled1>
      <SelectFilled2
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="filled"
        size={'small'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select
          label={'Label'}
          startAdornment={
            <InputAdornment position="start">
              <AdornmentStart3 />
            </InputAdornment>
          }
        ></Select>
        <FormHelperText>
          <HelperText5>{`Helper text`}</HelperText5>
        </FormHelperText>
      </SelectFilled2>
      <SelectFilled3
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="filled"
        size={'small'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select label={'Label'}></Select>
        <FormHelperText>
          <HelperText6>{`Helper text`}</HelperText6>
        </FormHelperText>
      </SelectFilled3>
      <SelectOutlined
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="outlined"
        size={'medium'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select
          label={'Label'}
          startAdornment={
            <InputAdornment position="start">
              <AdornmentStart4 />
            </InputAdornment>
          }
        ></Select>
        <FormHelperText>
          <HelperText7>{`Helper text`}</HelperText7>
        </FormHelperText>
      </SelectOutlined>
      <SelectOutlined1
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="outlined"
        size={'medium'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select label={'Label'}></Select>
        <FormHelperText>
          <HelperText8>{`Helper text`}</HelperText8>
        </FormHelperText>
      </SelectOutlined1>
      <SelectOutlined2
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="outlined"
        size={'small'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select
          label={'Label'}
          startAdornment={
            <InputAdornment position="start">
              <AdornmentStart5 />
            </InputAdornment>
          }
        ></Select>
        <FormHelperText>
          <HelperText9>{`Helper text`}</HelperText9>
        </FormHelperText>
      </SelectOutlined2>
      <SelectOutlined3
        options={[{ value: 'Quest', text: 'MadeWithQuest' }]}
        variant="outlined"
        size={'small'}
        disabled={false}
      >
        <InputLabel>{'Label'}</InputLabel>
        <Select label={'Label'}></Select>
        <FormHelperText>
          <HelperText10>{`Helper text`}</HelperText10>
        </FormHelperText>
      </SelectOutlined3>
    </Select2>
  );
}

export default Select1;
