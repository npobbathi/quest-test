/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { TextField } from '@mui/material';
import { styled } from '@mui/material/styles';

const TextFields21 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const TextFieldOutlined = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined1 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined2 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined3 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined4 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined5 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

function TextFields2(props) {
  return (
    <TextFields21 className={props.className}>
      <TextFieldOutlined
        size={'medium'}
        disabled={false}
        multiline={false}
        label={'Label'}
      />
      <TextFieldOutlined1
        size={'medium'}
        disabled={false}
        multiline={false}
        helperText={'new'}
        label={'Label'}
      />
      <TextFieldOutlined2
        size={'medium'}
        disabled={false}
        multiline={false}
        label={'cool'}
        label={'Label'}
      />
      <TextFieldOutlined3
        size={'small'}
        disabled={false}
        multiline={false}
        value={'none'}
        label={'Label'}
      />
      <TextFieldOutlined4
        size={'small'}
        disabled={false}
        multiline={false}
        label={'Label'}
      />
      <TextFieldOutlined5
        size={'small'}
        disabled={false}
        multiline={false}
        label={'Label'}
      />
    </TextFields21>
  );
}

export default TextFields2;
