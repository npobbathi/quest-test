/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { ButtonGroup, Button } from '@mui/material';
import { styled } from '@mui/material/styles';

const ButtonGroup2 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `30px`,
  boxSizing: `border-box`,
  height: 'auto',
  width: 'fit-content',
});

const ButtonContained = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained1 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained2 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupContained = styled(ButtonGroup)(({ theme }) => ({
  margin: `0px`,
}));

const ButtonContained3 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained4 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained5 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupContained1 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonContained6 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained7 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained8 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupContained2 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonContained9 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained10 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained11 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupContained3 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonOutlined = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Secondary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined1 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Secondary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined2 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Secondary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupOutlined = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonOutlined3 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Info']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined4 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Info']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined5 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Info']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupOutlined1 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonOutlined6 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Secondary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined7 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Secondary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined8 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Secondary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupOutlined2 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonOutlined9 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Info']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined10 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Info']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonOutlined11 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Info']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupOutlined3 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonText = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText1 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText2 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupText = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonText3 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Success']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText4 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Success']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText5 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Success']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupText1 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonText6 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText7 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText8 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Error']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupText2 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

const ButtonText9 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Success']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText10 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Success']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText11 = styled(Button)(({ theme }) => ({
  margin: `0px`,
  color: theme.palette['Success']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonGroupText3 = styled(ButtonGroup)(({ theme }) => ({
  margin: `20px 0px 0px 0px`,
}));

function ButtonGroup1(props) {
  return (
    <ButtonGroup2 className={props.className}>
      <ButtonGroupContained
        variant="contained"
        orientation={'horizontal'}
        color={'primary'}
        disabled={true}
        disableRipple={true}
      >
        <ButtonContained
          variant="contained"
          size={'medium'}
          color={'primary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained>
        <ButtonContained1
          variant="contained"
          size={'medium'}
          color={'primary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained1>
        <ButtonContained2
          variant="contained"
          size={'medium'}
          color={'primary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained2>
      </ButtonGroupContained>
      <ButtonGroupContained1
        variant="contained"
        orientation={'horizontal'}
        color={'error'}
      >
        <ButtonContained3
          variant="contained"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained3>
        <ButtonContained4
          variant="contained"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained4>
        <ButtonContained5
          variant="contained"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained5>
      </ButtonGroupContained1>
      <ButtonGroupContained2
        variant="contained"
        orientation={'vertical'}
        color={'primary'}
        disableRipple={true}
      >
        <ButtonContained6
          variant="contained"
          size={'medium'}
          color={'primary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained6>
        <ButtonContained7
          variant="contained"
          size={'medium'}
          color={'primary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained7>
        <ButtonContained8
          variant="contained"
          size={'medium'}
          color={'primary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained8>
      </ButtonGroupContained2>
      <ButtonGroupContained3
        variant="contained"
        orientation={'vertical'}
        color={'error'}
      >
        <ButtonContained9
          variant="contained"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained9>
        <ButtonContained10
          variant="contained"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained10>
        <ButtonContained11
          variant="contained"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonContained11>
      </ButtonGroupContained3>
      <ButtonGroupOutlined
        variant="outlined"
        orientation={'horizontal'}
        color={'secondary'}
      >
        <ButtonOutlined
          variant="outlined"
          size={'medium'}
          color={'secondary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined>
        <ButtonOutlined1
          variant="outlined"
          size={'medium'}
          color={'secondary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined1>
        <ButtonOutlined2
          variant="outlined"
          size={'medium'}
          color={'secondary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined2>
      </ButtonGroupOutlined>
      <ButtonGroupOutlined1
        variant="outlined"
        orientation={'horizontal'}
        color={'info'}
      >
        <ButtonOutlined3
          variant="outlined"
          size={'medium'}
          color={'info'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined3>
        <ButtonOutlined4
          variant="outlined"
          size={'medium'}
          color={'info'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined4>
        <ButtonOutlined5
          variant="outlined"
          size={'medium'}
          color={'info'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined5>
      </ButtonGroupOutlined1>
      <ButtonGroupOutlined2
        variant="outlined"
        orientation={'vertical'}
        color={'secondary'}
      >
        <ButtonOutlined6
          variant="outlined"
          size={'medium'}
          color={'secondary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined6>
        <ButtonOutlined7
          variant="outlined"
          size={'medium'}
          color={'secondary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined7>
        <ButtonOutlined8
          variant="outlined"
          size={'medium'}
          color={'secondary'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined8>
      </ButtonGroupOutlined2>
      <ButtonGroupOutlined3
        variant="outlined"
        orientation={'vertical'}
        color={'info'}
      >
        <ButtonOutlined9
          variant="outlined"
          size={'medium'}
          color={'info'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined9>
        <ButtonOutlined10
          variant="outlined"
          size={'medium'}
          color={'info'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined10>
        <ButtonOutlined11
          variant="outlined"
          size={'medium'}
          color={'info'}
          disabled={false}
        >
          {'Medium'}
        </ButtonOutlined11>
      </ButtonGroupOutlined3>
      <ButtonGroupText
        variant="text"
        color={'error'}
        orientation={'horizontal'}
      >
        <ButtonText
          variant="text"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText>
        <ButtonText1
          variant="text"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText1>
        <ButtonText2
          variant="text"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText2>
      </ButtonGroupText>
      <ButtonGroupText1
        variant="text"
        color={'success'}
        orientation={'horizontal'}
      >
        <ButtonText3
          variant="text"
          size={'medium'}
          color={'success'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText3>
        <ButtonText4
          variant="text"
          size={'medium'}
          color={'success'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText4>
        <ButtonText5
          variant="text"
          size={'medium'}
          color={'success'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText5>
      </ButtonGroupText1>
      <ButtonGroupText2 variant="text" color={'error'} orientation={'vertical'}>
        <ButtonText6
          variant="text"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText6>
        <ButtonText7
          variant="text"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText7>
        <ButtonText8
          variant="text"
          size={'medium'}
          color={'error'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText8>
      </ButtonGroupText2>
      <ButtonGroupText3
        variant="text"
        color={'success'}
        orientation={'vertical'}
      >
        <ButtonText9
          variant="text"
          size={'medium'}
          color={'success'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText9>
        <ButtonText10
          variant="text"
          size={'medium'}
          color={'success'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText10>
        <ButtonText11
          variant="text"
          size={'medium'}
          color={'success'}
          disabled={false}
        >
          {'Medium'}
        </ButtonText11>
      </ButtonGroupText3>
    </ButtonGroup2>
  );
}

export default ButtonGroup1;
