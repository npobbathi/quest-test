/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button } from '@mui/material';
import { LoadingButton } from '@mui/lab';
import { styled } from '@mui/material/styles';
import useButton1 from 'src/components/Button1/useButton1';

const Button2 = styled('div')(({ theme }) => ({
  backgroundColor: theme.palette['Background']['Background'],
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `40px`,
  boxSizing: `border-box`,
  height: 'auto',
}));

const ButtonContained = styled(Button)(({ theme }) => ({
  margin: `0px`,
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonContained1 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonContained2 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonContained3 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonContained4 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const LoadingButton1 = styled(LoadingButton)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Small'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Small'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Small'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Small'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Small'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Small'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Small'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Small'].textTransform,
}));

const ButtonOutlined = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonOutlined1 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Small'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Small'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Small'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Small'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Small'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Small'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Small'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Small'].textTransform,
}));

const ButtonOutlined2 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Small'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Small'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Small'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Small'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Small'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Small'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Small'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Small'].textTransform,
}));

const ButtonOutlined3 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Small'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Small'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Small'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Small'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Small'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Small'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Small'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Small'].textTransform,
}));

const ButtonText = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonText1 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonText2 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText3 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

const ButtonText4 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Small'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Small'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Small'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Small'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Small'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Small'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Small'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Small'].textTransform,
}));

const ButtonText5 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Small'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Small'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Small'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Small'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Small'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Small'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Small'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Small'].textTransform,
}));

const ButtonText6 = styled(Button)(({ theme }) => ({
  margin: `10px 0px 0px 0px`,
  fontStyle: theme.typography['Components']['Button Font - Small'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Small'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Small'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Small'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Small'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Small'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Small'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Small'].textTransform,
}));

function Button1(props) {
  const { fns } = useButton1();

  return (
    <Button2 className={props.className}>
      <ButtonContained
        size={'large'}
        color={'primary'}
        disabled={'disabled'}
        variant={'contained'}
      >
        {'Large'}
      </ButtonContained>
      <ButtonContained1
        size={'large'}
        color={'error'}
        disabled={'disabled'}
        variant={'contained'}
      >
        {'Large'}
      </ButtonContained1>
      <ButtonContained2
        size={'large'}
        color={'success'}
        disabled={'disabled'}
        variant={'contained'}
      >
        {'Large'}
      </ButtonContained2>
      <ButtonContained3
        size={'medium'}
        color={'primary'}
        disabled={'disabled'}
        variant={'contained'}
      >
        {'Medium'}
      </ButtonContained3>
      <ButtonContained4
        size={'medium'}
        color={'info'}
        disabled={'disabled'}
        variant={'contained'}
      >
        {'Medium'}
      </ButtonContained4>
      <LoadingButton1
        size={'small'}
        color={'primary'}
        disabled={false}
        loading={true}
        variant={'contained'}
      >
        {'Small'}
      </LoadingButton1>
      <ButtonOutlined
        size={'large'}
        color={'primary'}
        disabled={'disabled'}
        variant={'outlined'}
      >
        {'new'}
      </ButtonOutlined>
      <ButtonOutlined1
        size={'small'}
        color={'warning'}
        disabled={false}
        variant={'outlined'}
      >
        {'yup yup'}
      </ButtonOutlined1>
      <ButtonOutlined2
        size={'small'}
        color={'error'}
        disabled={'disabled'}
        variant={'outlined'}
      >
        {'Small'}
      </ButtonOutlined2>
      <ButtonOutlined3
        size={'small'}
        color={'warning'}
        disabled={'disabled'}
        variant={'outlined'}
      >
        {'Small'}
      </ButtonOutlined3>
      <ButtonText
        size={'large'}
        color={'primary'}
        disabled={false}
        variant={'text'}
        disabled={'disabled'}
      >
        {'Large'}
      </ButtonText>
      <ButtonText1
        size={'large'}
        color={'secondary'}
        disabled={false}
        variant={'text'}
        disabled={'disabled'}
      >
        {'Large'}
      </ButtonText1>
      <ButtonText2
        size={'medium'}
        color={'secondary'}
        disabled={false}
        variant={'text'}
        disabled={'disabled'}
      >
        {'Medium'}
      </ButtonText2>
      <ButtonText3
        size={'medium'}
        color={'info'}
        disabled={true}
        variant={'text'}
        disabled={'disabled'}
      >
        {'Medium'}
      </ButtonText3>
      <ButtonText4
        size={'small'}
        color={'error'}
        disabled={false}
        variant={'text'}
        disabled={'disabled'}
      >
        {'Small'}
      </ButtonText4>
      <ButtonText5
        size={'small'}
        color={'warning'}
        disabled={false}
        variant={'text'}
        disabled={'disabled'}
      >
        {'Small'}
      </ButtonText5>
      <ButtonText6
        size={'small'}
        color={'success'}
        disabled={false}
        variant={'text'}
        disabled={'disabled'}
      >
        {'Small'}
      </ButtonText6>
    </Button2>
  );
}

export default Button1;
