/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import Image1Image from 'src/assets/images/CardFlexWidthandHeight_Image.png';
import Button1 from 'src/components/Button1/Button1';

const Property1Default = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  boxShadow: `0px 4px 6px rgba(3, 0, 161, 0.2)`,
  borderRadius: `8px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
});

const Image1 = styled('div')({
  backgroundImage: `url(${Image1Image})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `257px`,
  margin: `0px`,
  overflow: `hidden`,
});

const TextButton = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 40px 60px 40px`,
  boxSizing: `border-box`,
  margin: `30px 0px 0px 0px`,
});

const LoremIpsumTestToBeSe = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  width: `297.86px`,
  margin: `0px`,
});

const ButtonClicked = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(107, 104, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  height: `48px`,
  width: `138px`,
  margin: `30px 0px 0px 0px`,
});

const Button11 = styled(Button1)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
}));

function CardFlexWidthAndHeig(props) {
  return (
    <Property1Default className={props.className}>
      <Image1></Image1>
      <TextButton>
        <LoremIpsumTestToBeSe>
          {`Lorem ipsum test to be seen and not read for placement only. Lorem ipsum test to be seen.`}
        </LoremIpsumTestToBeSe>
        {false && <ButtonClicked>{`Button Clicked!`}</ButtonClicked>}
        <Button11 />
      </TextButton>
    </Property1Default>
  );
}

export default CardFlexWidthAndHeig;
