/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Chip, SvgIcon, Avatar } from '@mui/material';
import { IconX } from 'lib';
import { styled } from '@mui/material/styles';

const Chip2 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px`,
  boxSizing: `border-box`,
  height: 'auto',
  width: 'fit-content',
});

const Chip3 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Chip4 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Common']['White']['100p'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const IconX1 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
});

const Chip5 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Common']['White']['100p'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const IconX2 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
});

const Chip6 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Common']['White']['100p'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Avatar1 = styled(Avatar)(({ theme }) => ({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
}));

const Chip7 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Avatar2 = styled(Avatar)(({ theme }) => ({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
}));

const Chip8 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Common']['White']['100p'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Avatar3 = styled(Avatar)(({ theme }) => ({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
}));

const Chip9 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Common']['White']['100p'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Avatar4 = styled(Avatar)(({ theme }) => ({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
}));

const IconX3 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
});

const Chip10 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Common']['White']['100p'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const IconX4 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
});

const Chip11 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Common']['White']['100p'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Avatar5 = styled(Avatar)(({ theme }) => ({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
}));

const Chip12 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Avatar6 = styled(Avatar)(({ theme }) => ({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
}));

const Chip13 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Info']['Main'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Avatar7 = styled(Avatar)(({ theme }) => ({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
}));

const IconX5 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px 0px 0px 8px`,
});

const Chip14 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Secondary']['Main'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

const Chip15 = styled(Chip)(({ theme }) => ({
  height: `32px`,
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Warning']['Main'],
  fontStyle: theme.typography['Components']['Tooltip'].fontStyle,
  fontFamily: theme.typography['Components']['Tooltip'].fontFamily,
  fontWeight: theme.typography['Components']['Tooltip'].fontWeight,
  fontSize: theme.typography['Components']['Tooltip'].fontSize,
  letterSpacing: theme.typography['Components']['Tooltip'].letterSpacing,
  lineHeight: theme.typography['Components']['Tooltip'].lineHeight,
  textDecoration: theme.typography['Components']['Tooltip'].textDecoration,
  textTransform: theme.typography['Components']['Tooltip'].textTransform,
}));

function Chip1(props) {
  return (
    <Chip2 className={props.className}>
      <Chip3 color={'default'} variant={'filled'} label={'Chip Component'} />
      <Chip4 color={'primary'} variant={'filled'} label={'Chip Component'} />
      <Chip5
        color={'warning'}
        variant={'filled'}
        label={'Chip Component'}
        deleteIcon={<IconX1 fontSize={'inherit'} component={IconX} />}
        onDelete={() => {}}
      />
      <Chip6
        color={'info'}
        variant={'filled'}
        label={'Chip Component'}
        deleteIcon={<IconX2 fontSize={'inherit'} component={IconX} />}
        onDelete={() => {}}
      />
      <Chip7
        color={'default'}
        variant={'filled'}
        avatar={
          <Avatar1
            src="assets/images/Chip___Avatar___.png"
            sx={{ width: 40, height: 40 }}
            variant={'circular'}
          ></Avatar1>
        }
        label={'Chip Component'}
      />
      <Chip8
        color={'secondary'}
        variant={'filled'}
        avatar={
          <Avatar2
            src="assets/images/Chip___Avatar____1.png"
            sx={{ width: 40, height: 40 }}
            variant={'circular'}
          ></Avatar2>
        }
        label={'Chip Component'}
      />
      <Chip9
        color={'error'}
        variant={'filled'}
        avatar={
          <Avatar3
            src="assets/images/Chip___Avatar____2.png"
            sx={{ width: 40, height: 40 }}
            variant={'circular'}
          ></Avatar3>
        }
        label={'Chip Component'}
      />
      <Chip10
        color={'success'}
        variant={'filled'}
        avatar={
          <Avatar4
            src="assets/images/Chip___Avatar____3.png"
            sx={{ width: 40, height: 40 }}
            variant={'circular'}
          ></Avatar4>
        }
        label={'Chip Component'}
        deleteIcon={<IconX3 fontSize={'inherit'} component={IconX} />}
        onDelete={() => {}}
      />
      <Chip11
        color={'success'}
        variant={'filled'}
        label={'Chip Component'}
        deleteIcon={<IconX4 fontSize={'inherit'} component={IconX} />}
        onDelete={() => {}}
      />
      <Chip12
        color={'primary'}
        variant={'outlined'}
        avatar={
          <Avatar5
            src="assets/images/Chip___Avatar____4.png"
            sx={{ width: 40, height: 40 }}
            variant={'circular'}
          ></Avatar5>
        }
        label={'Chip Component'}
      />
      <Chip13
        color={'info'}
        variant={'outlined'}
        avatar={
          <Avatar6
            src="assets/images/Chip___Avatar____5.png"
            sx={{ width: 40, height: 40 }}
            variant={'circular'}
          ></Avatar6>
        }
        label={'Chip Component'}
      />
      <Chip14
        color={'secondary'}
        variant={'outlined'}
        avatar={
          <Avatar7
            src="assets/images/Chip___Avatar____6.png"
            sx={{ width: 40, height: 40 }}
            variant={'circular'}
          ></Avatar7>
        }
        label={'Chip Component'}
        deleteIcon={<IconX5 fontSize={'inherit'} component={IconX} />}
        onDelete={() => {}}
      />
      <Chip15 color={'warning'} variant={'outlined'} label={'Chip Component'} />
    </Chip2>
  );
}

export default Chip1;
