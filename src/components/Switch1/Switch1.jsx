/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Switch, FormControlLabel } from '@mui/material';
import { styled } from '@mui/material/styles';

const Switch2 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px`,
  boxSizing: `border-box`,
  height: 'auto',
  width: 'fit-content',
});

const Switch3 = styled(Switch)(({ theme }) => ({
  height: `38px`,
  width: `58px`,
  margin: `0px`,
}));

const Switch4 = styled(Switch)(({ theme }) => ({
  height: `38px`,
  width: `58px`,
  margin: `30px 0px 0px 0px`,
}));

const Switch5 = styled(Switch)(({ theme }) => ({
  height: `38px`,
  width: `58px`,
  margin: `30px 0px 0px 0px`,
}));

const FormControlLabel1 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const FormControlLabel2 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const FormControlLabel3 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const FormControlLabel4 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const FormControlLabel5 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const FormControlLabel6 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const FormControlLabel7 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const Switch13 = styled(Switch)(({ theme }) => ({
  height: `38px`,
  width: `58px`,
  margin: `30px 0px 0px 0px`,
}));

const Switch14 = styled(Switch)(({ theme }) => ({
  height: `24px`,
  width: `40px`,
  margin: `30px 0px 0px 0px`,
}));

const Switch15 = styled(Switch)(({ theme }) => ({
  height: `24px`,
  width: `40px`,
  margin: `30px 0px 0px 0px`,
}));

const Switch16 = styled(Switch)(({ theme }) => ({
  height: `24px`,
  width: `40px`,
  margin: `30px 0px 0px 0px`,
}));

const Switch17 = styled(Switch)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
}));

const Switch18 = styled(Switch)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
}));

const FormControlLabel8 = styled(FormControlLabel)(({ theme }) => ({
  margin: `30px 0px 0px 0px`,
  color: theme.palette['Text']['Disabled'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

function Switch1(props) {
  return (
    <Switch2 className={props.className}>
      <Switch3
        size={'medium'}
        color={'default'}
        disabled={false}
        defaultChecked={true}
      />
      <Switch4
        size={'medium'}
        color={'primary'}
        disabled={false}
        defaultChecked={true}
      />
      <Switch5
        size={'medium'}
        color={'secondary'}
        disabled={false}
        defaultChecked={true}
      />
      <FormControlLabel1
        control={
          <Switch
            size={'medium'}
            color={'default'}
            disabled={true}
            defaultChecked={true}
          />
        }
        label={'Label'}
      />
      <FormControlLabel2
        control={
          <Switch
            size={'medium'}
            color={'primary'}
            disabled={false}
            defaultChecked={true}
            checked={true}
          />
        }
        label={'Label'}
      />
      <FormControlLabel3
        control={
          <Switch
            size={'medium'}
            color={'error'}
            disabled={false}
            defaultChecked={true}
          />
        }
        label={'not'}
      />
      <FormControlLabel4
        control={
          <Switch
            size={'medium'}
            color={'warning'}
            disabled={false}
            defaultChecked={true}
          />
        }
        label={'Label'}
      />
      <FormControlLabel5
        control={
          <Switch
            size={'medium'}
            color={'success'}
            disabled={false}
            defaultChecked={true}
          />
        }
        label={'Label'}
      />
      <FormControlLabel6
        control={
          <Switch
            size={'medium'}
            color={'warning'}
            disabled={false}
            defaultChecked={false}
          />
        }
        label={'Label'}
      />
      <FormControlLabel7
        control={
          <Switch
            size={'medium'}
            color={'info'}
            disabled={false}
            defaultChecked={false}
          />
        }
        label={'Label'}
      />
      <Switch13
        size={'medium'}
        color={'default'}
        disabled={true}
        defaultChecked={true}
      />
      <Switch14
        size={'small'}
        color={'primary'}
        disabled={false}
        defaultChecked={true}
      />
      <Switch15
        size={'small'}
        color={'error'}
        disabled={false}
        defaultChecked={true}
      />
      <Switch16
        size={'small'}
        color={'success'}
        disabled={false}
        defaultChecked={true}
      />
      <Switch17
        size={'small'}
        color={'error'}
        disabled={false}
        defaultChecked={false}
      />
      <Switch18
        size={'small'}
        color={'warning'}
        disabled={false}
        defaultChecked={false}
      />
      <FormControlLabel8
        control={
          <Switch
            size={'small'}
            color={'default'}
            disabled={true}
            defaultChecked={true}
          />
        }
        label={'Label'}
      />
    </Switch2>
  );
}

export default Switch1;
