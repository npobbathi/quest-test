/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import {
  Drawer,
  Box,
  ListItem,
  ListItemAvatar,
  SvgIcon,
  ListItemText,
  Divider,
} from '@mui/material';
import { IconCut } from 'lib';
import { styled } from '@mui/material/styles';

const Drawer2 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px`,
  boxSizing: `border-box`,
  height: 'auto',
  width: 'fit-content',
});

const List = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Subhead = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const Subheader = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['List Subheader'].fontStyle,
  fontFamily: theme.typography['Components']['List Subheader'].fontFamily,
  fontWeight: theme.typography['Components']['List Subheader'].fontWeight,
  fontSize: theme.typography['Components']['List Subheader'].fontSize,
  letterSpacing: theme.typography['Components']['List Subheader'].letterSpacing,
  lineHeight: theme.typography['Components']['List Subheader'].lineHeight,
  textDecoration:
    theme.typography['Components']['List Subheader'].textDecoration,
  textTransform: theme.typography['Components']['List Subheader'].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const IconCut1 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const X = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  margin: `0px`,
}));

const ListItem1 = styled(ListItem)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const ListItemAvatar1 = styled(ListItemAvatar)(({ theme }) => ({}));

const IconCut2 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const X1 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  margin: `0px`,
}));

const ListItem2 = styled(ListItem)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const ListItemAvatar2 = styled(ListItemAvatar)(({ theme }) => ({}));

const IconCut3 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const X2 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  margin: `0px`,
}));

const ListItem3 = styled(ListItem)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const ListItemAvatar3 = styled(ListItemAvatar)(({ theme }) => ({}));

const DividerHorizontal = styled(Divider)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const IconCut4 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const X3 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  margin: `0px`,
}));

const ListItem4 = styled(ListItem)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const ListItemAvatar4 = styled(ListItemAvatar)(({ theme }) => ({}));

const IconCut5 = styled(SvgIcon)({
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const X4 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  margin: `0px`,
}));

const ListItem5 = styled(ListItem)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
}));

const ListItemAvatar5 = styled(ListItemAvatar)(({ theme }) => ({}));

const Drawer3 = styled(Drawer)(({ theme }) => ({
  width: `320px`,
  height: `800px`,
  margin: `0px`,
}));

function Drawer1(props) {
  return (
    <Drawer2 className={props.className}>
      <Drawer3 open={true} anchor="left">
        <Box sx={{ width: 320, height: '100%' }}>
          <List>
            <Subhead>
              <Subheader>{`Subheader`}</Subheader>
            </Subhead>
            <ListItem1 dense={false} secondaryAction={<X>{`⌘ X`}</X>}>
              <ListItemAvatar1>
                <IconCut1 fontSize={'inherit'} component={IconCut} />
              </ListItemAvatar1>
              <ListItemText primary={'Cut'} />
            </ListItem1>
            <ListItem2 dense={false} secondaryAction={<X1>{`⌘ X`}</X1>}>
              <ListItemAvatar2>
                <IconCut2 fontSize={'inherit'} component={IconCut} />
              </ListItemAvatar2>
              <ListItemText primary={'Cut'} />
            </ListItem2>
            <ListItem3 dense={false} secondaryAction={<X2>{`⌘ X`}</X2>}>
              <ListItemAvatar3>
                <IconCut3 fontSize={'inherit'} component={IconCut} />
              </ListItemAvatar3>
              <ListItemText primary={'Cut'} />
            </ListItem3>
            <DividerHorizontal orientation="horizontal" />
            <ListItem4 dense={false} secondaryAction={<X3>{`⌘ X`}</X3>}>
              <ListItemAvatar4>
                <IconCut4 fontSize={'inherit'} component={IconCut} />
              </ListItemAvatar4>
              <ListItemText primary={'Cut'} />
            </ListItem4>
            <ListItem5 dense={false} secondaryAction={<X4>{`⌘ X`}</X4>}>
              <ListItemAvatar5>
                <IconCut5 fontSize={'inherit'} component={IconCut} />
              </ListItemAvatar5>
              <ListItemText primary={'Cut'} />
            </ListItem5>
          </List>
        </Box>
      </Drawer3>
    </Drawer2>
  );
}

export default Drawer1;
